n = 1,
with_ties = TRUE) %>%
distinct()
#check for duplicates
WSHFC_cleaned %>%
unique() %>%
group_by(`Site Name`, Address) %>%
mutate(n = n()) %>%
filter(n > 1) %>%
arrange(`Project Name`, `Site Name`, Address) # %>%
#  view()
# ------- DATA FILTER #3 ------- select only entry with latest expiration date
WSHFC_cleaned <- WSHFC_cleaned %>%
group_by(`Site Name`, Address) %>%
slice_max(`Project Expiration Date`,
n = 1,
with_ties = TRUE) %>%
distinct()
#check for duplicates
WSHFC_cleaned %>%
unique() %>%
group_by(`Site Name`, Address) %>%
mutate(n = n()) %>%
filter(n > 1) %>%
arrange(`Project Name`, `Site Name`, Address)# %>%
#  view()
# ------- DATA FILTER #4 ------- select only entry with earliest in service date
WSHFC_cleaned <- WSHFC_cleaned %>%
group_by(`Site Name`, Address) %>%
slice_min(`First Credit Year or C of O's`,
n = 1,
with_ties = TRUE) %>%
distinct()
#check for duplicates
WSHFC_cleaned %>%
distinct() %>%
group_by(`Site Name`, Address) %>%
mutate(n = n()) %>%
filter(n > 1) %>%
arrange(`Project Name`, `Site Name`, Address)# %>%
# view()
# ------- DATA FILTER #4 ------- for entries where there are multiple properties with the same total restricted unit count but different other data, select record that seems correct
WSHFC_cleaned <- WSHFC_cleaned %>%
distinct() %>%
filter(!(`Project Name` == "Annobee Apartments, The" & `Site Name` == "Annobee Apartments, The" & `80%` == 43)) %>% #remove this record, keep record with pop served & deeper affordability
filter(!(`Project Name` == "Catalina Apartments" & `Site Name` == "Catalina Apartments" & `40%` == 32)) %>% #remove this record, keep record with pop served & deeper affordability
filter(!(`Project Name` == "Maternity Shelter (Youth Emergency Shelter (YES) North)" & `Site Name` == "Youth Emergency Shelter (YES) North" & `50%` == 8)) #remove this record, keep record with deeper affordability
#check to see if any duplicates remaining - should be 0
WSHFC_cleaned %>%
distinct() %>%
group_by(`Site Name`, Address) %>%
mutate(n = n()) %>%
filter(n > 1) %>%
arrange(`Project Name`, `Site Name`, Address) %>%
view()
#rename columns and add empty columns for data we dont have
WSHFC_cleaned <- WSHFC_cleaned %>%
mutate(DataSource = as.character(NA),
AMI25 = as.numeric(NA),
AMI75 = as.numeric(NA),
AMI85 = as.numeric(NA),
AMI90 = as.numeric(NA),
AMI100 = as.numeric(NA),
MarketRate = as.numeric(NA),
ManagerUnit = as.numeric(NA),
Confidentiality = as.character(NA),
Policy = as.character(NA),
Tenure = as.character(NA),
FundingSource = as.character(NA)) %>%
rename(ProjectID = `ProjectKey`,
ProjectName = `Project Name`,
PropertyID = `SiteKey`,
PropertyName = `Site Name`,
Owner = `Contractor/Owner Org`,
Manager = `Property Management Org`,
City = `City`,
TotalUnits = `Total Project Units`,
TotalRestrictedUnits = `Income & Rent Restricted Units`,
InServiceDate = `First Credit Year or C of O's`,
AMI20 = `20%`,
AMI30 = `30%`,
AMI35 = `35%`,
AMI40 = `40%`,
AMI45 = `45%`,
AMI50 = `50%`,
AMI60 = `60%`,
AMI65 = `65%`,
AMI70 = `70%`,
AMI80 = `80%`,
Bedroom_0 = `STUDIO`,
Bedroom_1 = `1 BR`,
Bedroom_2 = `2 BR`,
Bedroom_3 = `3 BR`,
Bedroom_4 = `4 BR`,
Bedroom_5 = `5 BR`,
Bedroom_Unknown = `Unknown`,
BedCount = `GROUP HOME/BED`,
HOMEcity = `HOME City`,
HOMEcounty = `HOME County`,
HOMEstate = `HOME State`,
FundingSources = `Funder`,
ExpirationDate = `Project Expiration Date`,
LargeHousehold4plus = `Large Household (4+ pp)`,
Site_Type = `Site Type`)
#select only necessary columns and arrange columns
WSHFC_cleaned <- select_and_arrange_columns_function(WSHFC_cleaned)
#set DataSource field
WSHFC_cleaned$DataSource = "WSHFC"
## 4) save files --------------------------------------------------------------------
#save N: drive cleaned files location filepath
J_drive_cleaned_files_filepath <- "J:/Projects/IncomeRestrictedHsgDB/2022_update/WSHFC/Cleaned Data/"
#save cleaned files
write_csv(WSHFC_cleaned, paste0(J_drive_cleaned_files_filepath, "WSHFC_2022_cleaned.csv"))
ibrary(tidyverse)
# Create three new HOME fields. Rename existing HOME field
IRHD22raw <- IRHD22raw %>%
mutate(HOMEcity = as.character(NA),
HOMEcounty = as.character(NA),
HOMEstate = as.character(NA)) %>%
rename(HOMEtotal = `HOME`)
library(tidyverse)
library(readxl)
library(janitor)
IRHD22raw <- read_csv("J:/Projects/IncomeRestrictedHsgDB/2022_update/Data/1 Working Files/2022 IRHD v3 - ready4reconcilescript.csv")
#load cleaned WSHFC data that has portfolios as of end of 2021
WSHFC22raw <- read_csv("J:/Projects/IncomeRestrictedHsgDB/2022_update/WSHFC/Cleaned Data/WSHFC_2022_cleaned.csv")
dat <- vroom(...)
problems(IRHD22raw)
print(90)
View(IRHD22raw)
# Create three new HOME fields. Rename existing HOME field
IRHD22raw <- IRHD22raw %>%
mutate(HOMEcity = as.character(NA),
HOMEcounty = as.character(NA),
HOMEstate = as.character(NA)) %>%
rename(HOMEtotal = `HOME`)
View(IRHD22raw)
#reorder fields
IRHD22raw <- IRHD22raw[, c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,
21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,
41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,
61,62,63,64,65,66,67,68,69,78,79,80,70,71,72,73,74,75,76,77)]
View(WSHFC22raw)
View(IRHD22raw)
View(IRHD22raw)
library(tidyverse)
library(readxl)
library(janitor)
## 1) load data ---------------------------------------------------------------------
#load cleaned 2022 IRHD that has portfolios as of end of 2021
IRHD22raw <- read_csv("J:/Projects/IncomeRestrictedHsgDB/2022_update/Data/1 Working Files/2022 IRHD v3 - ready4reconcilescript.csv")
#load cleaned WSHFC data that has portfolios as of end of 2021
WSHFC22raw <- read_csv("J:/Projects/IncomeRestrictedHsgDB/2022_update/WSHFC/Cleaned Data/WSHFC_2022_cleaned.csv")
View(WSHFC22raw)
View(WSHFC22raw)
IRHD22raw <- IRHD22raw %>%
mutate(HOMEcity = as.character(NA),
HOMEcounty = as.character(NA),
HOMEstate = as.character(NA))
# reorder fields - puts new HOME fields next to the existing HOME field
IRHD22raw <- IRHD22raw[, c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,
21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,
41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,
61,62,63,64,65,66,67,68,69,78,79,80,70,71,72,73,74,75,76,77)]
IRHD22raw$Manager[IRHD22raw$Manager == 'HASCO'] <- 'Snohomish County Housing Authority'
IRHD22raw$Owner[IRHD22raw$Owner == 'HASCO'] <- 'Snohomish County Housing Authority'
IRHD22raw$Manager[IRHD22raw$Manager == 'Low Income Housing Institute'] <- 'Low Income Housing Institute (LIHI)'
IRHD22raw$Owner[IRHD22raw$Owner == 'Low Income Housing Institute'] <- 'Low Income Housing Institute (LIHI)'
IRHD22raw  <- IRHD22raw %>% filter(County == "Pierce" | County == "Snohomish" | County == "Kitsap")
newWSHFC22 <- anti_join(WSHFC22raw, IRHD22raw, by = "PropertyID")
View(newWSHFC22)
nomatchIRHD22 <- anti_join(IRHD22raw, # %>% filter(DataSource == "WSHFC"),
WSHFC22raw, by = "PropertyID")
View(IRHD22raw)
nomatchIRHD22 <- anti_join(IRHD22raw %>% filter(DataSource == "WSHFC"),
WSHFC22raw, by = "PropertyID")
View(nomatchIRHD22)
View(nomatchIRHD22)
View(WSHFC22raw)
library(tidyverse)
library(readxl)
library(janitor)
## 1) load data ---------------------------------------------------------------------
#load cleaned 2022 IRHD that has portfolios as of end of 2021
IRHD22raw <- read_csv("J:/Projects/IncomeRestrictedHsgDB/2022_update/Data/1 Working Files/2022 IRHD v3 - ready4reconcilescript.csv")
#load cleaned WSHFC data that has portfolios as of end of 2021
WSHFC22raw <- read_csv("J:/Projects/IncomeRestrictedHsgDB/2022_update/WSHFC/Cleaned Data/WSHFC_2022_cleaned.csv")
View(IRHD22raw)
# Create three new HOME fields
IRHD22raw <- IRHD22raw %>%
mutate(HOMEcity = as.character(NA),
HOMEcounty = as.character(NA),
HOMEstate = as.character(NA))
# reorder fields - puts new HOME fields next to the existing HOME field
IRHD22raw <- IRHD22raw[, c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,
21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,
41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,
61,62,63,64,65,66,67,68,69,78,79,80,70,71,72,73,74,75,76,77)]
# Clean up various fields for matching with WSHFC
IRHD22raw$Manager[IRHD22raw$Manager == 'HASCO'] <- 'Snohomish County Housing Authority'
IRHD22raw$Owner[IRHD22raw$Owner == 'HASCO'] <- 'Snohomish County Housing Authority'
IRHD22raw$Manager[IRHD22raw$Manager == 'Low Income Housing Institute'] <- 'Low Income Housing Institute (LIHI)'
IRHD22raw$Owner[IRHD22raw$Owner == 'Low Income Housing Institute'] <- 'Low Income Housing Institute (LIHI)'
# Limit to just Pierce, Snohomish, and Kitsap
IRHD22raw  <- IRHD22raw %>% filter(County == "Pierce" | County == "Snohomish" | County == "Kitsap")
# Pivot the IRHD22raw data to make it long and thin
long_IRHD <- IRHD22raw %>%
pivot_longer(c('ProjectID',
'ProjectName',
'PropertyName',
'Owner',
'Manager',
'InServiceDate',
'ExpirationDate',
'Address',
'City',
'ZIP',
'County',
'TotalUnits',
'TotalRestrictedUnits',
'AMI20',
'AMI25',
'AMI30',
'AMI35',
'AMI40',
'AMI45',
'AMI50',
'AMI60',
'AMI65',
'AMI70',
'AMI75',
'AMI80',
'AMI85',
'AMI90',
'AMI100',
'MarketRate',
'ManagerUnit',
'Bedroom_0',
'Bedroom_1',
'Bedroom_2',
'Bedroom_3',
'Bedroom_4',
'Bedroom_5',
'Bedroom_Unknown',
'BedCount',
'Site_Type',
'HOMEcity',
'HOMEcounty',
'HOMEstate',
'Confidentiality',
'Policy',
'Senior',
'Disabled',
'Homeless',
'Transitional',
'Veterans',
'FundingSources',
'Tenure'),
names_to='variable_class',
values_to='variable_value',
values_transform = list(variable_value=as.character))
# Remove some fields that we don't need here
long_IRHD <- long_IRHD[c(5,30,31)]
# Pivot the mocked-up data to make it long and thin
long_WSHFC <- WSHFC22raw %>%
pivot_longer(c('ProjectID',
'ProjectName',
'PropertyName',
'Owner',
'Manager',
'InServiceDate',
'ExpirationDate',
'Address',
'City',
'ZIP',
'County',
'TotalUnits',
'TotalRestrictedUnits',
'AMI20',
'AMI25',
'AMI30',
'AMI35',
'AMI40',
'AMI45',
'AMI50',
'AMI60',
'AMI65',
'AMI70',
'AMI75',
'AMI80',
'AMI85',
'AMI90',
'AMI100',
'MarketRate',
'ManagerUnit',
'Bedroom_0',
'Bedroom_1',
'Bedroom_2',
'Bedroom_3',
'Bedroom_4',
'Bedroom_5',
'Bedroom_Unknown',
'BedCount',
'Site_Type',
'HOMEcity',
'HOMEcounty',
'HOMEstate',
'Confidentiality',
'Policy',
'Senior',
'Disabled',
'Homeless',
'Transitional',
'Veterans',
'FundingSources',
'Tenure'),
names_to='variable_class',
values_to='variable_value',
values_transform = list(variable_value=as.character))
# Remove some fields that we don't need here
long_WSHFC <- long_WSHFC[c(2,4,5)]
# Compare the two data sets in long form to identify values that have been changed
long_compare <- long_IRHD %>%
inner_join(long_WSHFC, by=c('PropertyID', 'variable_class')) %>%
filter(variable_value.x != variable_value.y)
View(long_compare)
View(IRHD22raw)
summarize(long_compare)
summary(long_compare)
count(long_compare$PropertyID)
View(long_compare)
length(unique(long_compare$PropertyID))
library(tidyverse)
library(readxl)
#library(janitor)
## 1) load data ---------------------------------------------------------------------
#load cleaned 2022 IRHD that has portfolios as of end of 2021
IRHD22raw <- read_csv("J:/Projects/IncomeRestrictedHsgDB/2022_update/Data/1 Working Files/2022 IRHD v3 - ready4reconcilescript.csv")
#load cleaned WSHFC data that has portfolios as of end of 2021
WSHFC22raw <- read_csv("J:/Projects/IncomeRestrictedHsgDB/2022_update/WSHFC/Cleaned Data/WSHFC_2022_cleaned.csv")
IRHD22raw <- IRHD22raw %>%
mutate(HOMEcity = as.character(NA),
HOMEcounty = as.character(NA),
HOMEstate = as.character(NA))
IRHD22raw <- IRHD22raw[, c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,
21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,
41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,
61,62,63,64,65,66,67,68,69,78,79,80,70,71,72,73,74,75,76,77)]
# Clean up various fields for matching with WSHFC
IRHD22raw$Manager[IRHD22raw$Manager == 'HASCO'] <- 'Snohomish County Housing Authority'
IRHD22raw$Owner[IRHD22raw$Owner == 'HASCO'] <- 'Snohomish County Housing Authority'
IRHD22raw$Manager[IRHD22raw$Manager == 'Low Income Housing Institute'] <- 'Low Income Housing Institute (LIHI)'
IRHD22raw$Owner[IRHD22raw$Owner == 'Low Income Housing Institute'] <- 'Low Income Housing Institute (LIHI)'
# Limit to just Pierce, Snohomish, and Kitsap
IRHD22raw  <- IRHD22raw %>% filter(County == "Pierce" | County == "Snohomish" | County == "Kitsap")
View(WSHFC22raw)
newWSHFC22 <- anti_join(WSHFC22raw, IRHD22raw, by = "PropertyID")
## 4) Locate records in IRHD not in WSHFC (No longer in WSHFC data, but once were?) --------------------------------------------------------------------
nomatchIRHD22 <- anti_join(IRHD22raw %>% filter(DataSource == "WSHFC"),
WSHFC22raw, by = "PropertyID")
View(nomatchIRHD22)
IRHD22raw <- IRHD22raw[, -c(40,41,42,43,44)]
library(tidyverse)
library(readxl)
#library(janitor)
## 1) load data ---------------------------------------------------------------------
#load cleaned 2022 IRHD that has portfolios as of end of 2021
IRHD22raw <- read_csv("J:/Projects/IncomeRestrictedHsgDB/2022_update/Data/1 Working Files/2022 IRHD v3 - ready4reconcilescript.csv")
#load cleaned WSHFC data that has portfolios as of end of 2021
WSHFC22raw <- read_csv("J:/Projects/IncomeRestrictedHsgDB/2022_update/WSHFC/Cleaned Data/WSHFC_2022_cleaned.csv")
IRHD22raw <- IRHD22raw %>%
mutate(HOMEcity = as.character(NA),
HOMEcounty = as.character(NA),
HOMEstate = as.character(NA))
# reorder fields - puts new HOME fields next to the existing HOME field
IRHD22raw <- IRHD22raw[, c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,
21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,
41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,
61,62,63,64,65,66,67,68,69,78,79,80,70,71,72,73,74,75,76,77)]
# Remove summary AMI fields (we can do this all via a script from now on)
IRHD22raw <- IRHD22raw[, -c(40,41,42,43,44)]
IRHD22raw$Manager[IRHD22raw$Manager == 'HASCO'] <- 'Snohomish County Housing Authority'
IRHD22raw$Owner[IRHD22raw$Owner == 'HASCO'] <- 'Snohomish County Housing Authority'
IRHD22raw$Manager[IRHD22raw$Manager == 'Low Income Housing Institute'] <- 'Low Income Housing Institute (LIHI)'
IRHD22raw$Owner[IRHD22raw$Owner == 'Low Income Housing Institute'] <- 'Low Income Housing Institute (LIHI)'
# Limit to just Pierce, Snohomish, and Kitsap
IRHD22raw  <- IRHD22raw %>% filter(County == "Pierce" | County == "Snohomish" | County == "Kitsap")
newWSHFC22 <- anti_join(WSHFC22raw, IRHD22raw, by = "PropertyID")
nomatchIRHD22 <- anti_join(IRHD22raw %>% filter(DataSource == "WSHFC"),
WSHFC22raw, by = "PropertyID")
# Pivot the IRHD22raw data to make it long and thin
long_IRHD <- IRHD22raw %>%
pivot_longer(c('ProjectID',
'ProjectName',
'PropertyName',
'Owner',
'Manager',
'InServiceDate',
'ExpirationDate',
'Address',
'City',
'ZIP',
'County',
'TotalUnits',
'TotalRestrictedUnits',
'AMI20',
'AMI25',
'AMI30',
'AMI35',
'AMI40',
'AMI45',
'AMI50',
'AMI60',
'AMI65',
'AMI70',
'AMI75',
'AMI80',
'AMI85',
'AMI90',
'AMI100',
'MarketRate',
'ManagerUnit',
'Bedroom_0',
'Bedroom_1',
'Bedroom_2',
'Bedroom_3',
'Bedroom_4',
'Bedroom_5',
'Bedroom_Unknown',
'BedCount',
'Site_Type',
'HOMEcity',
'HOMEcounty',
'HOMEstate',
'Confidentiality',
'Policy',
'Senior',
'Disabled',
'Homeless',
'Transitional',
'Veterans',
'FundingSources',
'Tenure'),
names_to='variable_class',
values_to='variable_value',
values_transform = list(variable_value=as.character))
# Remove some fields that we don't need here
long_IRHD <- long_IRHD[c(5,30,31)]
# Pivot the mocked-up data to make it long and thin
long_WSHFC <- WSHFC22raw %>%
pivot_longer(c('ProjectID',
'ProjectName',
'PropertyName',
'Owner',
'Manager',
'InServiceDate',
'ExpirationDate',
'Address',
'City',
'ZIP',
'County',
'TotalUnits',
'TotalRestrictedUnits',
'AMI20',
'AMI25',
'AMI30',
'AMI35',
'AMI40',
'AMI45',
'AMI50',
'AMI60',
'AMI65',
'AMI70',
'AMI75',
'AMI80',
'AMI85',
'AMI90',
'AMI100',
'MarketRate',
'ManagerUnit',
'Bedroom_0',
'Bedroom_1',
'Bedroom_2',
'Bedroom_3',
'Bedroom_4',
'Bedroom_5',
'Bedroom_Unknown',
'BedCount',
'Site_Type',
'HOMEcity',
'HOMEcounty',
'HOMEstate',
'Confidentiality',
'Policy',
'Senior',
'Disabled',
'Homeless',
'Transitional',
'Veterans',
'FundingSources',
'Tenure'),
names_to='variable_class',
values_to='variable_value',
values_transform = list(variable_value=as.character))
# Remove some fields that we don't need here
long_WSHFC <- long_WSHFC[c(2,4,5)]
# Compare the two data sets in long form to identify values that have been changed
long_compare <- long_IRHD %>%
inner_join(long_WSHFC, by=c('PropertyID', 'variable_class')) %>%
filter(variable_value.x != variable_value.y)
View(newWSHFC22)
View(nomatchIRHD22)
