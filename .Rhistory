variable_class == "Bedroom_0"|
variable_class == "Bedroom_1"|
variable_class == "Bedroom_2"|
variable_class == "Bedroom_3"|
variable_class == "Bedroom_4"|
variable_class == "Bedroom_5"|
variable_class == "Bedroom_Unknown"|
variable_class == "BedCount"|
variable_class == "HOMEcity"|
variable_class == "HOMEcounty"|
variable_class == "HOMEstate"|
variable_class == "Bedroom_4"|
variable_class == "ProjectName"), select = c(PropertyID, variable_class,variable_value.x,variable_value.y,match, select))
subset4 <- long_compare[!is.na(as.numeric(long_compare$variable_value.x)),]
View(subset4)
# Subset 4) select all numeric data, identify small numeric changes to unit counts, etc
subset4 <- long_compare %>% subset((variable_class == "TotalUnits" |
variable_class == "TotalRestrictedUnits"|
variable_class == "AMI20"|
variable_class == "AMI25"|
variable_class == "AMI30"|
variable_class == "AMI35"|
variable_class == "AMI40"|
variable_class == "AMI45"|
variable_class == "AMI50"|
variable_class == "AMI60"|
variable_class == "AMI65"|
variable_class == "AMI70"|
variable_class == "AMI75"|
variable_class == "AMI80"|
variable_class == "AMI85"|
variable_class == "AMI90"|
variable_class == "AMI100"|
variable_class == "MarketRate"|
variable_class == "ManagerUnit"|
variable_class == "Bedroom_0"|
variable_class == "Bedroom_1"|
variable_class == "Bedroom_2"|
variable_class == "Bedroom_3"|
variable_class == "Bedroom_4"|
variable_class == "Bedroom_5"|
variable_class == "Bedroom_Unknown"|
variable_class == "BedCount"|
variable_class == "HOMEcity"|
variable_class == "HOMEcounty"|
variable_class == "HOMEstate"|
variable_class == "Bedroom_4"|
variable_class == "ProjectName"), select = c(PropertyID, variable_class,variable_value.x,variable_value.y,match, select))
long_compare <- long_compare [!(long_compare$variable_class == "TotalUnits" |
long_compare$variable_class == "TotalRestrictedUnits"|
long_compare$variable_class == "AMI20"|
long_compare$variable_class == "AMI25"|
long_compare$variable_class == "AMI30"|
long_compare$variable_class == "AMI35"|
long_compare$variable_class == "AMI40"|
long_compare$variable_class == "AMI45"|
long_compare$variable_class == "AMI50"|
long_compare$variable_class == "AMI60"|
long_compare$variable_class == "AMI65"|
long_compare$variable_class == "AMI70"|
long_compare$variable_class == "AMI75"|
long_compare$variable_class == "AMI80"|
long_compare$variable_class == "AMI85"|
long_compare$variable_class == "AMI90"|
long_compare$variable_class == "AMI100"|
long_compare$variable_class == "MarketRate"|
long_compare$variable_class == "ManagerUnit"|
long_compare$variable_class == "Bedroom_0"|
long_compare$variable_class == "Bedroom_1"|
long_compare$variable_class == "Bedroom_2"|
long_compare$variable_class == "Bedroom_3"|
long_compare$variable_class == "Bedroom_4"|
long_compare$variable_class == "Bedroom_5"|
long_compare$variable_class == "Bedroom_Unknown"|
long_compare$variable_class == "BedCount"|
long_compare$variable_class == "HOMEcity"|
long_compare$variable_class == "HOMEcounty"|
long_compare$variable_class == "HOMEstate"|
long_compare$variable_class == "Bedroom_4"|
long_compare$variable_class == "ProjectName"),] # remove from long_compare
View(subset4)
# Which data do we want to use?
subset4$change <- ""
subset4$change <- subset4$variable_value.y-subset4$variable_value.x/subset4$variable_value.y
subset4$change <- (subset4$variable_value.y-subset4$variable_value.x)/subset4$variable_value.y
subset4$change <- as.numeric(subset4$variable_value.y-subset4$variable_value.x)/subset4$variable_value.y)
subset4$change <- as.numeric((subset4$variable_value.y-subset4$variable_value.x)/subset4$variable_value.y)
rm(subset4)
# Subset 4) select all numeric data, identify small numeric changes to unit counts, etc
subset4 <- long_compare %>% subset((variable_class == "TotalUnits" |
variable_class == "TotalRestrictedUnits"|
variable_class == "AMI20"|
variable_class == "AMI25"|
variable_class == "AMI30"|
variable_class == "AMI35"|
variable_class == "AMI40"|
variable_class == "AMI45"|
variable_class == "AMI50"|
variable_class == "AMI60"|
variable_class == "AMI65"|
variable_class == "AMI70"|
variable_class == "AMI75"|
variable_class == "AMI80"|
variable_class == "AMI85"|
variable_class == "AMI90"|
variable_class == "AMI100"|
variable_class == "MarketRate"|
variable_class == "ManagerUnit"|
variable_class == "Bedroom_0"|
variable_class == "Bedroom_1"|
variable_class == "Bedroom_2"|
variable_class == "Bedroom_3"|
variable_class == "Bedroom_4"|
variable_class == "Bedroom_5"|
variable_class == "Bedroom_Unknown"|
variable_class == "BedCount"|
variable_class == "HOMEcity"|
variable_class == "HOMEcounty"|
variable_class == "HOMEstate"|
variable_class == "Bedroom_4"), select = c(PropertyID, variable_class,variable_value.x,variable_value.y,match, select))
# Create formula for calculating difference between numeric values
subset4$select <- ""
# Create formula for calculating difference between numeric values
subset4$select <- ""
# Compare the two data sets in long form to identify values that have been changed
long_compare <- long_IRHD %>%
inner_join(long_WSHFC, by=c('PropertyID', 'variable_class')) %>%
mutate("match" = ifelse(mapply(identical, variable_value.x, variable_value.y), "YES", "NO")) %>%
filter(match == "NO") %>%
drop_na(variable_value.y)
# Create field to indicate which variable to use
long_compare$select <- ""
# Subset 1) select records with no data in the IRHD - we will take new data from WSHFC
subset1 <- long_compare %>% subset(is.na(variable_value.x), select = c(PropertyID, variable_class,variable_value.x,variable_value.y,match, select))
subset1$select <- "y"
long_compare <- long_compare %>% na.omit(long_compare$variable_value.x) # remove from long_compare
# Subset 2) Below fields - select WHSFC data
subset2 <- long_compare %>% subset((variable_class == "InServiceDate" |
variable_class == "Manager"|
variable_class == "Owner"|
variable_class == "ProjectID"|
variable_class == "Disabled"|
variable_class == "Homeless"|
variable_class == "Senior"|
variable_class == "PropertyName"|
variable_class == "Site_Type"|
variable_class == "FundingSources"|
variable_class == "ProjectName"), select = c(PropertyID, variable_class,variable_value.x,variable_value.y,match, select))
subset2$select <- "y"
long_compare <- long_compare [!(long_compare$variable_class == "InServiceDate" |
long_compare$variable_class == "Manager"|
long_compare$variable_class == "Owner"|
long_compare$variable_class == "ProjectID"|
long_compare$variable_class == "Disabled"|
long_compare$variable_class == "Homeless"|
long_compare$variable_class == "Senior"|
long_compare$variable_class == "PropertyName"|
long_compare$variable_class == "Site_Type"|
long_compare$variable_class == "FundingSources"|
long_compare$variable_class == "ProjectName"),] # remove from long_compare
# Subset 3) select addresses that have "multiple" in the field - use IRHD address
subset3 <- long_compare %>% subset(str_detect(long_compare$variable_value.y, str_c("Mu")), select = c(PropertyID, variable_class,variable_value.x,variable_value.y,match, select))
subset3$select <- "x"
long_compare <- long_compare [!(str_detect(long_compare$variable_value.y, str_c("Mu"))),] # remove from long_compare
# Subset 4) select all numeric data, identify small numeric changes to unit counts, etc
subset4 <- long_compare %>% subset((variable_class == "TotalUnits" |
variable_class == "TotalRestrictedUnits"|
variable_class == "AMI20"|
variable_class == "AMI25"|
variable_class == "AMI30"|
variable_class == "AMI35"|
variable_class == "AMI40"|
variable_class == "AMI45"|
variable_class == "AMI50"|
variable_class == "AMI60"|
variable_class == "AMI65"|
variable_class == "AMI70"|
variable_class == "AMI75"|
variable_class == "AMI80"|
variable_class == "AMI85"|
variable_class == "AMI90"|
variable_class == "AMI100"|
variable_class == "MarketRate"|
variable_class == "ManagerUnit"|
variable_class == "Bedroom_0"|
variable_class == "Bedroom_1"|
variable_class == "Bedroom_2"|
variable_class == "Bedroom_3"|
variable_class == "Bedroom_4"|
variable_class == "Bedroom_5"|
variable_class == "Bedroom_Unknown"|
variable_class == "BedCount"|
variable_class == "HOMEcity"|
variable_class == "HOMEcounty"|
variable_class == "HOMEstate"|
variable_class == "Bedroom_4"), select = c(PropertyID, variable_class,variable_value.x,variable_value.y,match, select))
# Create formula for calculating difference between numeric values
subset4$select <- ""
subset4$upperbound <- subset4$variable_value.y*1.03
View(subset4)
View(WSHFC_raw)
View(long_WSHFC)
subset4_wide <- subset4 %>%
pivot_wider(c('PropertyID'),
names_to='variable_class',
values_to='variable_value',
values_transform = list(variable_value=as.character))
subset4_wide <- subset4 %>%
pivot_wider(c('PropertyID'),
names_from='variable_class',
values_from='variable_value',
values_transform = list(variable_value=as.character))
subset4_wide <- subset4 %>%
pivot_wider(c('PropertyID'),
names_from='variable_class',
values_from=c('variable_value.x','variable_value.y'))
View(subset4_wide)
subset4_wide <- subset4 %>%
pivot_wider(c('PropertyID',
'TotalRestrictedUnits'),
names_from='variable_class',
values_from=c('variable_value.x','variable_value.y'))
subset4_wide <- subset4 %>%
pivot_wider(c('PropertyID'),
names_from=c('variable_value.x','variable_value.y'),
values_from='variable_class')
View(subset4_wide)
subset4_wide <- subset4 %>%
pivot_wider(c('PropertyID'),
names_from='variable_class',
values_from=c('variable_value.x','variable_value.y'))
View(subset4_wide)
subset4_wide <- subset4 %>%
pivot_wider(c('PropertyID'),
names_from='variable_class',
values_from=c('variable_value.x','variable_value.y'),
values_transform = list(variable_value=as.character))
values_transform = list(variable_value=as.character))
values_transform = list(variable_value=as.character)
View(values_transform)
View(values_transform[["variable_value"]])
values_transform
rm(values_transform)
rm(subset4_wide)
values_transform = list(variable_value=as.character)
subset4_wide <- subset4 %>%
pivot_wider(c('PropertyID','variable_value.x'),
names_from='variable_class',
values_from='variable_value.y',
values_transform = list(variable_value=as.character))
rm(values_transform)
subset4_wide <- subset4 %>%
pivot_wider(c('PropertyID','variable_value.x'),
names_from='variable_class',
values_from='variable_value.y')
View(subset4_wide)
subset4_wide <- subset4 %>%
pivot_wider(c('PropertyID','variable_value.x', 'variable_value.y'),
names_from='variable_class',
values_from='variable_value.y')
rm(subset4_wide)
subset4_x <- subset4 %>%
aggregate(subset4$variable_value.x,list(subset4$PropertyID), FUN = "sum")
subset4_x <- subset4 %>%
aggregate(subset4$variable_value.x, by = list(subset4$PropertyID), FUN = "sum")
subset4_x <- subset4 %>%
aggregate(subset4$variable_value.x, by = list(subset4$PropertyID), FUN = 'sum')
subset4_x <- subset4 %>%
aggregate(subset4$variable_value.x, by = list(subset4$PropertyID), FUN = sum)
subset4_x <- subset4 %>%
aggregate(subset4$variable_value.x, by = list(subset4$PropertyID), sum)
subset4_x <- subset4 %>%
aggregate(subset4$variable_value.x, by = list(subset4$PropertyID), mean)
subset4_x <- subset4 %>%
aggregate(subset4$variable_value.x, by = list(subset4$PropertyID), FUN=sum)
subset4_x <- subset4 %>%
aggregate(subset4$variable_value.x, by = subset4$PropertyID, FUN=sum)
subset4_x <- aggregate(subset4$variable_value.x, by = list(subset4$PropertyID), FUN=sum)
subset4_x <- aggregate(subset4$variable_value.x, by = list(subset4$PropertyID), FUN=sum)
subset4_x <- aggregate(as.numeric(subset4$variable_value.x), by = list(subset4$PropertyID), FUN=sum)
View(subset4_x)
subset4_x$y <- aggregate(as.numeric(subset4$variable_value.y), by = list(subset4$PropertyID), FUN=sum)
subset4_x <- subset4_x[c(1,2,4)]
subset4_x <- subset4_x[!c(3)]
# Create formula for calculating difference between numeric values
subset4_x <- aggregate(as.numeric(subset4$variable_value.x), by = list(subset4$PropertyID), FUN=sum)
subset4_x$y <- aggregate(as.numeric(subset4$variable_value.y), by = list(subset4$PropertyID), FUN=sum)
# Subset 4) select all numeric data, identify small numeric changes to unit counts, etc
subset4 <- long_compare %>% subset((variable_class == "TotalUnits" |
variable_class == "TotalRestrictedUnits"|
variable_class == "AMI20"|
variable_class == "AMI25"|
variable_class == "AMI30"|
variable_class == "AMI35"|
variable_class == "AMI40"|
variable_class == "AMI45"|
variable_class == "AMI50"|
variable_class == "AMI60"|
variable_class == "AMI65"|
variable_class == "AMI70"|
variable_class == "AMI75"|
variable_class == "AMI80"|
variable_class == "AMI85"|
variable_class == "AMI90"|
variable_class == "AMI100"|
variable_class == "MarketRate"|
variable_class == "ManagerUnit"|
variable_class == "Bedroom_0"|
variable_class == "Bedroom_1"|
variable_class == "Bedroom_2"|
variable_class == "Bedroom_3"|
variable_class == "Bedroom_4"|
variable_class == "Bedroom_5"|
variable_class == "Bedroom_Unknown"|
variable_class == "BedCount"|
variable_class == "HOMEcity"|
variable_class == "HOMEcounty"|
variable_class == "HOMEstate"|
variable_class == "Bedroom_4"), select = c(PropertyID, variable_class,variable_value.x,variable_value.y,match, select))
# Create formula for calculating difference between numeric values
subset4_x <- aggregate(as.numeric(subset4$variable_value.x), by = list(subset4$PropertyID), FUN=sum)
subset4_x$y <- aggregate(as.numeric(subset4$variable_value.y), by = list(subset4$PropertyID), FUN=sum)
View(subset4_x)
subset4_x <- subset4_x[!c(2)]
# Create formula for calculating difference between numeric values
subset4_x <- aggregate(as.numeric(subset4$variable_value.x), by = list(subset4$PropertyID), FUN=sum)
subset4_x$y <- aggregate(as.numeric(subset4$variable_value.y), by = list(subset4$PropertyID), FUN=sum)
subset4_x <- subset4_x[c(2)]
View(subset4_x)
# Create formula for calculating difference between numeric values
subset4_x <- aggregate(as.numeric(subset4$variable_value.x), by = list(subset4$PropertyID), FUN=sum)
subset4_x$y <- aggregate(as.numeric(subset4$variable_value.y), by = list(subset4$PropertyID), FUN=sum)
subset4_x <- subset4_x[c(1,2)]
View(subset4_x)
# Create formula for calculating difference between numeric values
subset4_x <- aggregate(as.numeric(subset4$variable_value.x), by = list(subset4$PropertyID), FUN=sum)
subset4_x$y <- aggregate(as.numeric(subset4$variable_value.y), by = list(subset4$PropertyID), FUN=sum)
subset4_x <- subset4_x[c(1,2,4)]
subset4_x <- subset4_x[c(1,2,3)]
subset4_x <- subset4_x[c(1,2,5)]
subset4_x$y <- subset4_x$'y$x'
# Create formula for calculating difference between numeric values
subset4_x <- aggregate(as.numeric(subset4$variable_value.x), by = list(subset4$PropertyID), FUN=sum)
subset4_y <- aggregate(as.numeric(subset4$variable_value.y), by = list(subset4$PropertyID), FUN=sum)
View(subset4_x)
View(subset4_y)
View(subset4_x)
View(subset4_y)
subset4_y$y <- subset4_y$x
subset4_x <- aggregate(as.numeric(subset4$variable_value.x), by = list(subset4$PropertyID), FUN=sum)
subset4_y <- aggregate(as.numeric(subset4$variable_value.y), by = list(subset4$PropertyID), FUN=sum)
View(subset4_y)
subset4_sum <- subset4 %>% group_by(subset4$PropertyID) %>%
summarize(value.x=sum(variable_value.x),
value.y=sum(variable_value.y))
subset4_sum <- subset4 %>% group_by(as.numeric(subset4$PropertyID)) %>%
summarize(value.x=sum(variable_value.x),
value.y=sum(variable_value.y))
subset4_sum <- subset4 %>% group_by(as.numeric(subset4$PropertyID)) %>%
summarize(value.x=sum(as.numeric(variable_value.x)),
value.y=sum(as.numeric(variable_value.y)))
View(subset4_sum)
subset4_sum <- subset4 %>% group_by(subset4$PropertyID) %>%
summarize(value.x=sum(as.numeric(variable_value.x)),
value.y=sum(as.numeric(variable_value.y)))
subset4_sum <- subset4 %>% group_by(PropertyID) %>%
summarize(value.x=sum(as.numeric(variable_value.x)),
value.y=sum(as.numeric(variable_value.y)))
rm(subset4_x)
rm(subset4_y)
subset4_sum$diff <- (subset4_sum$value.x-subset4_sum$value.y)/subset4_sum$value.x
subset4_sum$diff <- abs((subset4_sum$value.x-subset4_sum$value.y)/subset4_sum$value.x)
# join back to subset4 table, so each row of data now has the percentage difference
subset4 <- merge(subset4, subset4_sum, by = "PropertyID")
View(subset4)
# Create formula for calculating difference between numeric values
subset4_sum <- subset4 %>% group_by(PropertyID) %>%
summarize(sum.x=sum(as.numeric(variable_value.x)),
sum.y=sum(as.numeric(variable_value.y)))
# Subset 4) select all numeric data, identify small numeric changes to unit counts, etc
subset4 <- long_compare %>% subset((variable_class == "TotalUnits" |
variable_class == "TotalRestrictedUnits"|
variable_class == "AMI20"|
variable_class == "AMI25"|
variable_class == "AMI30"|
variable_class == "AMI35"|
variable_class == "AMI40"|
variable_class == "AMI45"|
variable_class == "AMI50"|
variable_class == "AMI60"|
variable_class == "AMI65"|
variable_class == "AMI70"|
variable_class == "AMI75"|
variable_class == "AMI80"|
variable_class == "AMI85"|
variable_class == "AMI90"|
variable_class == "AMI100"|
variable_class == "MarketRate"|
variable_class == "ManagerUnit"|
variable_class == "Bedroom_0"|
variable_class == "Bedroom_1"|
variable_class == "Bedroom_2"|
variable_class == "Bedroom_3"|
variable_class == "Bedroom_4"|
variable_class == "Bedroom_5"|
variable_class == "Bedroom_Unknown"|
variable_class == "BedCount"|
variable_class == "HOMEcity"|
variable_class == "HOMEcounty"|
variable_class == "HOMEstate"|
variable_class == "Bedroom_4"), select = c(PropertyID, variable_class,variable_value.x,variable_value.y,match, select))
# Create formula for calculating difference between numeric values
subset4_sum <- subset4 %>% group_by(PropertyID) %>%
summarize(sum.x=sum(as.numeric(variable_value.x)),
sum.y=sum(as.numeric(variable_value.y)))
# abs function - absolute value of the percentage difference - consider cutting off at 10%?
subset4_sum$diff <- abs((subset4_sum$value.x-subset4_sum$value.y)/subset4_sum$value.x)
# Create formula for calculating difference between numeric values
subset4_sum <- subset4 %>% group_by(PropertyID) %>%
summarize(sum.x=sum(as.numeric(variable_value.x)),
sum.y=sum(as.numeric(variable_value.y)))
# abs function - absolute value of the percentage difference - consider cutting off at 10%?
subset4_sum$diff <- abs((subset4_sum$sum.x-subset4_sum$sum.y)/subset4_sum$sum.x)
# join back to subset4 table, so each row of data now has the percentage difference
subset4 <- merge(subset4, subset4_sum, by = "PropertyID")
rm(subset4_sum)
View(WSHFC_raw)
# Compare the two data sets in long form to identify values that have been changed
long_compare <- long_IRHD %>%
inner_join(long_WSHFC, by=c('PropertyID', 'variable_class')) %>%
mutate("match" = ifelse(mapply(identical, variable_value.x, variable_value.y), "YES", "NO")) %>%
filter(match == "NO") %>%
drop_na(variable_value.y)
# Create field to indicate which variable to use
long_compare$select <- ""
# Subset 1) select records with no data in the IRHD - we will take new data from WSHFC
subset1 <- long_compare %>% subset(is.na(variable_value.x), select = c(PropertyID, variable_class,variable_value.x,variable_value.y,match, select))
subset1$select <- "y"
long_compare <- long_compare %>% na.omit(long_compare$variable_value.x) # remove from long_compare
# Subset 2) Below fields - select WHSFC data
subset2 <- long_compare %>% subset((variable_class == "InServiceDate" |
variable_class == "Manager"|
variable_class == "Owner"|
variable_class == "ProjectID"|
variable_class == "Disabled"|
variable_class == "Homeless"|
variable_class == "Senior"|
variable_class == "BedCount"|
variable_class == "PropertyName"|
variable_class == "Site_Type"|
variable_class == "FundingSources"|
variable_class == "HOMEcity"|
variable_class == "HOMEcounty"|
variable_class == "HOMEstate"|
variable_class == "ProjectName"), select = c(PropertyID, variable_class,variable_value.x,variable_value.y,match, select))
subset2$select <- "y"
long_compare <- long_compare [!(long_compare$variable_class == "InServiceDate" |
long_compare$variable_class == "Manager"|
long_compare$variable_class == "Owner"|
long_compare$variable_class == "ProjectID"|
long_compare$variable_class == "Disabled"|
long_compare$variable_class == "Homeless"|
long_compare$variable_class == "Senior"|
long_compare$variable_class == "BedCount"|
long_compare$variable_class == "PropertyName"|
long_compare$variable_class == "Site_Type"|
long_compare$variable_class == "FundingSources"|
long_compare$variable_class == "HOMEcity"|
long_compare$variable_class == "HOMEcounty"|
long_compare$variable_class == "HOMEstate"|
long_compare$variable_class == "ProjectName"),] # remove from long_compare
# Subset 3) select addresses that have "multiple" in the field - use IRHD address
subset3 <- long_compare %>% subset(str_detect(long_compare$variable_value.y, str_c("Mu")), select = c(PropertyID, variable_class,variable_value.x,variable_value.y,match, select))
subset3$select <- "x"
long_compare <- long_compare [!(str_detect(long_compare$variable_value.y, str_c("Mu"))),] # remove from long_compare
# Subset 4) select all AMI/Unit count/Bedroom size data, identify small numeric changes
subset4 <- long_compare %>% subset((variable_class == "TotalUnits" |
variable_class == "TotalRestrictedUnits"|
variable_class == "AMI20"|
variable_class == "AMI25"|
variable_class == "AMI30"|
variable_class == "AMI35"|
variable_class == "AMI40"|
variable_class == "AMI45"|
variable_class == "AMI50"|
variable_class == "AMI60"|
variable_class == "AMI65"|
variable_class == "AMI70"|
variable_class == "AMI75"|
variable_class == "AMI80"|
variable_class == "AMI85"|
variable_class == "AMI90"|
variable_class == "AMI100"|
variable_class == "MarketRate"|
variable_class == "ManagerUnit"|
variable_class == "Bedroom_0"|
variable_class == "Bedroom_1"|
variable_class == "Bedroom_2"|
variable_class == "Bedroom_3"|
variable_class == "Bedroom_4"|
variable_class == "Bedroom_5"|
variable_class == "Bedroom_Unknown"|
variable_class == "BedCount"), select = c(PropertyID, variable_class,variable_value.x,variable_value.y,match, select))
# Create formula for calculating difference between numeric values
subset4_sum <- subset4 %>% group_by(PropertyID) %>%
summarize(sum.x=sum(as.numeric(variable_value.x)),
sum.y=sum(as.numeric(variable_value.y)))
# abs function - absolute value of the percentage difference - consider cutting off at 10%?
subset4_sum$diff <- abs((subset4_sum$sum.x-subset4_sum$sum.y)/subset4_sum$sum.x)
# join back to subset4 table, so each row of data now has the percentage difference
subset4 <- merge(subset4, subset4_sum, by = "PropertyID")
rm(subset4_sum)
